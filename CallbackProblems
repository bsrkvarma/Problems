    class Program
    {
        private static string _data;
        private static Queue<string> _buffer;

        static bool _reading = true;
        static void Main(string[] args)
        {
            for (var i = 0; i <= 10; i++)
            {
                var res = PerformTask();
                Console.WriteLine(res);
            }
            Console.WriteLine("Completed work");
        }

        static string PerformTask()
        {
            if (_buffer == null)
            {
                _buffer = new Queue<string>();
                Task.Run(() =>
                {
                    DoWork(CallBack);
                    _reading = false;
                });
            }
            while (_reading && _data == null)
            {
                Thread.Sleep(10);
            }

            if (_data != null)
            {
                _buffer.Enqueue(_data);
                _data = null;
            }
            return _buffer.Dequeue(); 
        }

        static bool CallBack(string results)
        {
            _data = results;
            //Console.WriteLine(results);
            return true;
        }

        static bool DoWork(Func<string, bool> callback)
        {
            Console.WriteLine("startedWork");
            for (var i = 0; i <= 10; i++)
            {
                Thread.Sleep(100);
                callback($"data{i}");
            }
            return true;
        }
    }
